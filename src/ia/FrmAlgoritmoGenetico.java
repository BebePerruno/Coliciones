/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ia;

import java.util.ArrayList;
import javax.swing.AbstractListModel;

/**
 *
 * @author Jugador
 */
public abstract class FrmAlgoritmoGenetico extends javax.swing.JFrame {

    
    /**
     * Creates new form FrmAlgoritmoGenetico
     */
    public FrmAlgoritmoGenetico(int maxima_poblacion) {
        initComponents();
        this.jProgressBarPoblacionActual.setMinimum(maxima_poblacion);
        System.out.println("jProgressBarPoblacionActual.getMaximum()="+jProgressBarPoblacionActual.getMaximum());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jLstPoblacionActual = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        jLstTodasLasPoblaciones = new javax.swing.JList<>();
        jLabel6 = new javax.swing.JLabel();
        jProgressBarPoblacionActual = new javax.swing.JProgressBar();
        jTxtPoblacionActual = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jCmbGenesElegibles = new javax.swing.JComboBox<>();
        jBtnAgregar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jLstGenomaModelo = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jPanel4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jTxtGenoma = new javax.swing.JTextField();
        jTxtFitness = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jBtnIniciarEvolucion = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jBtnDetenerEvolucion = new javax.swing.JButton();
        jBtnSalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Algoritmo genetico");
        setPreferredSize(new java.awt.Dimension(742, 500));
        setResizable(false);
        getContentPane().setLayout(null);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.orange, java.awt.Color.green));
        jPanel1.setLayout(null);

        jLabel5.setText("Todas las poblaciones");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(160, 20, 130, 16);

        jLstPoblacionActual.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "0" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jLstPoblacionActual.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLstPoblacionActualMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jLstPoblacionActual);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(20, 40, 120, 220);

        jLstTodasLasPoblaciones.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "0" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(jLstTodasLasPoblaciones);

        jPanel1.add(jScrollPane3);
        jScrollPane3.setBounds(160, 40, 120, 280);

        jLabel6.setText("Poblacion actual");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(20, 20, 100, 16);
        jPanel1.add(jProgressBarPoblacionActual);
        jProgressBarPoblacionActual.setBounds(20, 260, 120, 20);
        jPanel1.add(jTxtPoblacionActual);
        jTxtPoblacionActual.setBounds(20, 280, 120, 22);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(420, 20, 310, 360);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.orange, java.awt.Color.green));
        jPanel2.setLayout(null);

        jLabel1.setText("Agregue el genoma modelo");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(20, 10, 200, 16);

        jLabel2.setText("Elija un numero del 0 al 9");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(20, 70, 140, 16);

        jCmbGenesElegibles.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" }));
        jPanel2.add(jCmbGenesElegibles);
        jCmbGenesElegibles.setBounds(20, 90, 60, 22);

        jBtnAgregar.setText("Agregar");
        jBtnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAgregarActionPerformed(evt);
            }
        });
        jPanel2.add(jBtnAgregar);
        jBtnAgregar.setBounds(20, 140, 110, 25);

        jScrollPane1.setViewportView(jLstGenomaModelo);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(20, 230, 90, 110);

        jLabel3.setText("Genoma objetivo");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(20, 200, 110, 16);

        jProgressBar1.setMaximum(6);
        jPanel2.add(jProgressBar1);
        jProgressBar1.setBounds(10, 180, 160, 14);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(10, 20, 190, 360);

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.orange, java.awt.Color.green));
        jPanel4.setLayout(null);

        jLabel7.setText("Mejor habitante");
        jPanel4.add(jLabel7);
        jLabel7.setBounds(10, 10, 150, 16);
        jPanel4.add(jTxtGenoma);
        jTxtGenoma.setBounds(10, 60, 160, 22);
        jPanel4.add(jTxtFitness);
        jTxtFitness.setBounds(10, 120, 70, 22);

        jLabel10.setText("Genoma");
        jPanel4.add(jLabel10);
        jLabel10.setBounds(10, 40, 50, 16);

        jLabel8.setText("Fitness");
        jPanel4.add(jLabel8);
        jLabel8.setBounds(10, 100, 70, 16);

        getContentPane().add(jPanel4);
        jPanel4.setBounds(220, 220, 180, 160);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.orange, java.awt.Color.green));
        jPanel3.setLayout(null);

        jBtnIniciarEvolucion.setText("Iniciar evolucion");
        jBtnIniciarEvolucion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnIniciarEvolucionActionPerformed(evt);
            }
        });
        jPanel3.add(jBtnIniciarEvolucion);
        jBtnIniciarEvolucion.setBounds(20, 60, 130, 25);

        jLabel4.setText("Evolucionar");
        jPanel3.add(jLabel4);
        jLabel4.setBounds(40, 10, 80, 16);

        jBtnDetenerEvolucion.setText("Detener evolucion");
        jBtnDetenerEvolucion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnDetenerEvolucionActionPerformed(evt);
            }
        });
        jPanel3.add(jBtnDetenerEvolucion);
        jBtnDetenerEvolucion.setBounds(20, 110, 130, 25);

        getContentPane().add(jPanel3);
        jPanel3.setBounds(220, 20, 180, 160);

        jBtnSalir.setText("Salir");
        jBtnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSalirActionPerformed(evt);
            }
        });
        getContentPane().add(jBtnSalir);
        jBtnSalir.setBounds(330, 410, 77, 25);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jBtnSalirActionPerformed

   /**
    * Sirve para todas las listas.
    */
    private class Lista extends AbstractListModel<String>{

        private ArrayList<String> rsLista=new ArrayList();
        
        
        
        public void add(String texto){
            rsLista.add(texto);
        }
        
        @Override
        public int getSize() {
            return rsLista.size();
        }

        @Override
        public String getElementAt(int index) {
            return rsLista.get(index);
        }
        
        public String []getGenoma(){
            String []m={};
            if(rsLista.size()!=-1){
                m=new String[rsLista.size()];
                for (int i=0; i<rsLista.size(); i++){
                    m[i]=rsLista.get(i);
                }
            }
            return m;
        }
        
    }
    
    public String []getmGenomaObjetivo(){
        return listaGenomaModelo.getGenoma();
    }
    
    public String getGenomaObjetivo(){
        String respuesta="";
        String []m=getmGenomaObjetivo();
        for (String s: m){
            respuesta+=s;
        }
        return respuesta;
    }
    
    public abstract void eveAgregarGenomaModelo(int numero_elegido);
    public abstract void eveGenerandoGenomaObjetivo(String []mGenoma);
    private Lista listaGenomaModelo=new Lista();
    
    private void jBtnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAgregarActionPerformed
        listaGenomaModelo.add(jCmbGenesElegibles.getSelectedItem().toString());
        
        jProgressBar1.setValue(listaGenomaModelo.getSize());
        if(listaGenomaModelo.getSize()==6){
            jCmbGenesElegibles.setEnabled(false);
            jLstGenomaModelo.setModel(listaGenomaModelo);
            jBtnAgregar.setEnabled(false);
            eveGenerandoGenomaObjetivo(listaGenomaModelo.getGenoma());
        }
//        this.setTitle(jCmbGenesElegibles.getSelectedItem().toString());
        eveAgregarGenomaModelo(Integer.parseInt(this.jCmbGenesElegibles.getSelectedItem().toString()));
    }//GEN-LAST:event_jBtnAgregarActionPerformed

    public abstract void eveIniciarEvolucion();
    
    private void jBtnIniciarEvolucionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnIniciarEvolucionActionPerformed
        listaPoblacionActual=new Lista();
        eveIniciarEvolucion();
    }//GEN-LAST:event_jBtnIniciarEvolucionActionPerformed

    public abstract void eveDetenerEvolucion();
    private void jBtnDetenerEvolucionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnDetenerEvolucionActionPerformed
        eveDetenerEvolucion();
         this.jLstTodasLasPoblaciones.setModel(listaTodasLasPoblaciones);
    }//GEN-LAST:event_jBtnDetenerEvolucionActionPerformed

    private void jLstPoblacionActualMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLstPoblacionActualMouseClicked
        jTxtPoblacionActual.setText(""+jLstPoblacionActual.getSelectedValue());
    }//GEN-LAST:event_jLstPoblacionActualMouseClicked

    public void setMejorHabitante(String nuevo_genoma, int valor_del_fitness){
        this.jTxtGenoma.setText(nuevo_genoma);
        this.jTxtFitness.setText(""+valor_del_fitness);
    }
    
    private Lista listaPoblacionActual=new Lista();
    
    public void LimpiarPoblacionActual(){
        listaPoblacionActual=new Lista();
        jLstPoblacionActual.setModel(listaPoblacionActual);
    }
    
    public abstract void eveListandoPoblacionActual(String genomaDelIndividuo);
    
    public void addPoblacionActual(String genomaDelIndividuo){
        listaPoblacionActual.add(genomaDelIndividuo);
        eveListandoPoblacionActual(genomaDelIndividuo);
        System.out.println("listaPoblacionActual.getSize()="+listaPoblacionActual.getSize());
        jProgressBarPoblacionActual.setValue(listaPoblacionActual.getSize());
        if(jProgressBarPoblacionActual.getMaximum()==listaPoblacionActual.getSize()){
            this.jLstPoblacionActual.setModel(listaPoblacionActual);
//            LimpiarPoblacionActual();
        }
    }
    
    private Lista listaTodasLasPoblaciones=new Lista();
    
    public void LimpiarTodasLasPoblaciones(){
        listaTodasLasPoblaciones=new Lista();
        this.jLstTodasLasPoblaciones.setModel(listaTodasLasPoblaciones);
    }
    
    public abstract void eveListandoTodasLasPoblaciones(String genomaDelIndividuo);
    
    public void addTodasLasPoblaciones(String genomaDelIndividuo){
        listaTodasLasPoblaciones.add(genomaDelIndividuo);
        eveListandoTodasLasPoblaciones(genomaDelIndividuo);
        
       
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnAgregar;
    private javax.swing.JButton jBtnDetenerEvolucion;
    private javax.swing.JButton jBtnIniciarEvolucion;
    private javax.swing.JButton jBtnSalir;
    private javax.swing.JComboBox<String> jCmbGenesElegibles;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JList<String> jLstGenomaModelo;
    private javax.swing.JList<String> jLstPoblacionActual;
    private javax.swing.JList<String> jLstTodasLasPoblaciones;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JProgressBar jProgressBarPoblacionActual;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTxtFitness;
    private javax.swing.JTextField jTxtGenoma;
    private javax.swing.JTextField jTxtPoblacionActual;
    // End of variables declaration//GEN-END:variables
}
